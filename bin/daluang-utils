#!/usr/bin/python

import sys
import os
from daluang import Config, Converter, Reader, Locator

xapian_enabled = True
try:
	import xapian
	from daluang.search import Writer
except ImportError:
	xapian_enabled = False

config = None
languages = None
data = None

#
# Common
#
def load_config():
	global config
	if config == None:
		config = Config()
		config.init()

def load_data():
	global data, languages
	if data == None:
		base_dir = config.read('base', '/usr/share/daluang')
		data_dir = os.path.join(base_dir, 'data')

		locator = Locator()
		list = locator.scan(data_dir)

		data = {}
		languages = []
		for item in list:
			data[item['code']] = item
			languages.append(item['code'])

#
# Usage
#

def usage():
	print _("""Usage: daluang-utils <command> [cmd-opt ...]

Available commands:

- convert : convertes a wikipedia dump file
- index   : creates Xapian's index for a daluang data
- list    : lists all installed wikipedia files
- read    : reads a wikipedia entry
- help    : help for other commands""")

#
# Help
#
def cmd_help():
	if len(sys.argv) < 3:
		cmd = 'help'
	else:
		cmd = sys.argv[2]
	
	cmds = apps.keys()
	if cmd in cmds:
		func = apps[cmd][1]
		func()
	else:
		print _("Available commands: %s") % (" ".join(cmds))

def usage_help():
	print _('''Need help?
	
Usage: daluang-utils help <command>''')

#
# Index
#
def cmd_convert():
	if len(sys.argv) < 5:
		usage_convert()
		sys.exit(1)

	language = sys.argv[2];
	code = sys.argv[3];
	input = sys.argv[4];

	if input.endswith('.xml.bz2'):
		base = input[:-8]
	elif input.endswith('.bz2'):
		base = input[:-4]
	else:
		base = input

	output = base + ".data"

	converter = Converter(input, output)
	converter.set_language(language)
	converter.set_code(code)
	converter.convert()
	

def usage_convert():
	print _("""This command is used to convert a data from Wikipedia's format to Daluang own format.
	
Usage: daluang-utils convert <language> <code> <data>

    <data> is an XML database dump of Wikipedia. Usually it is written in the following format:

        idwiki-20080213-pages-articles.xml.bz2
	
Example usage:

    $ daluang-utils convert "Bahasa Indonesia" "id" idwiki-20080213-pages-articles.xml.bz2""")

#
# Read
#
def cmd_read():
	if len(sys.argv) < 4:
		usage_read()
		sys.exit(1)

	lang = sys.argv[2]
	title = sys.argv[3]

	if os.path.exists(lang):
		r = Reader(lang)
	else:
		load_config()
		load_data()
		r = Reader(data[lang]['datafile'])

	result = r.read(title)
	if result == None:
		print _("Not found: %s") % title
	else:
		title2, content = result
		print content

def usage_read():
	print _('''This command is used to read an article from Daluang data.
	
Usage: daluang-utils read <datafile|code> <title>

    <datafile|code> is either a data file or a language code.

Example usage:

    $ daluang-utils read id.data "bandung"
    $ daluang-utils read id "bandung"''')

	pass

#
# List
#
def cmd_list():
	load_config()
	load_data()
	
	if len(data) == 0:
		print _("No data available")

	else:
		print _("Available data:")

		cnt = 0
		for lang in languages:
			cnt += 1
			print "%d. [%s] %s" % (cnt, lang, data[lang]['lang'])


def usage_list():
	print _('''This command is used to list installed data.

Each line will be written in the following format:

    [code] langauge

Example:

    [id] Bahasa Indonesia

The value of "code" is used when you use "read" command.''')

#
# Index
#
def cmd_index():
	if len(sys.argv) < 4:
		usage_index()
		sys.exit(1)

	if not xapian_enabled:
		print _("""python-xapian doesn't exist""")
		sys.exit(1)

	data = sys.argv[2]
	database = sys.argv[3]

	stem_language = "none"

	writer = Writer()
	writer.set_data(data)
	writer.set_database(database)
	writer.set_stem_language(stem_language)
	writer.index()

def usage_index():
	print _("""This command is used to create a Xapian index of a data.
	
Usage: daluang-utils index <data> <database>

    <data> is a Daluang's data and <database> is a target Xapian's database.

You have to install python-xapian package in order to use this function. This operation may take very long time!
	
Example usage:

    $ daluang-utils index id.data id""")

#
# Main
#

apps = {
	'help' : [cmd_help, usage_help],
	'convert': [cmd_convert, usage_convert],
	'index': [cmd_index, usage_index],
	'read' : [cmd_read, usage_read],
	'list' : [cmd_list, usage_list]
}

if len(sys.argv) < 2:
	usage()
	sys.exit(1)

cmd = sys.argv[1]

cmds = apps.keys()
if cmd in cmds:
	func = apps[cmd][0]
	func()
else:
	usage()

